@page "/outbill"
@page "/outbill/{Page:int}"
@using Microsoft.EntityFrameworkCore
@inject IDbContextFactory<TaiweiContext> DbFactory
@inject NavigationManager Nav
@* ============================ *@
@*   NOTE by Mark, 2021-01-18,  *@
@*   Adapter has filter        *@
@* ============================ *@

@inject Q006OutbillGridQueryAdapter QueryAdapter

<PageTitle Title="出庫單查詢" />

<GridWrapper @ref="Wrapper"
             FilterChanged="ReloadAsync">
    <div class="container-fluid contacts-grid">

        <Q006OutbillFieldFilter Filters="@QueryAdapter.f" />

        @if (QueryAdapter.f.Loading || Parts == null)
        {
            <div class="row">
                <div class="col-12 alert alert-info">
                    Loading...
                </div>
            </div>
        }
        @if (Parts != null) // NOTE by Mark, 2021-01-17,
        {                   //      無返回記錄時由 AutoTableCompV2B 處理
            <AutoTableCompV3 Filters="@QueryAdapter.f"
                             Items="Items"
                             ColumsToExcludeCSV="id"
                             FieldMapper="fieldMappers" />
        }



        <Q000BasePaging Filters="@QueryAdapter.f" />
        <div>

            <span style="margin-left:-16px;font-size: 80%; color:darkgray">
                頁面載入 @DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", CultureInfo.InvariantCulture)
            </span>
        </div>


    </div>
</GridWrapper>


@code
{



    private string IsDisabled(bool condition) =>
    !QueryAdapter.f.Loading && condition ? "" : "disabled";

    /// <summary>
    /// Keeps track of the last page loaded.
    /// </summary>
    private int _lastPage = -1;


    List<FieldMapper> fieldMappers;

    //protected override void OnParametersSet()
    //{
    //    base.OnParametersSet();

    //    //Cticketcode Cstatus Casnid </ li >

    //    fieldMappers = new List<FieldMapper>();
    //    //    < li > 入庫單 狀態 入庫通知單ID
    //    fieldMappers.Add(new FieldMapper { Id = "Cticketcode", Name = "出庫單", Index = -1 });
    //    fieldMappers.Add(new FieldMapper { Id = "Cstatus", Name = "狀態", Index = -1 });
    //    //        fieldMappers.Add(new FieldMapper { Id = "Casnid", Name = "入庫通知單ID", Index = -1 });
    //    fieldMappers.Add(new FieldMapper { Id = "Coutasnid", Name = "出庫通知單ID", Index = -1 });


    //}



    protected override void OnAfterRender(bool firstRender)
    {
        // Ensure we're on the same, er, right page.
        if (_lastPage < 1)
        {
            Nav.NavigateTo(QueryAdapter.f.PageHelper.BaseUrl + "1");

            //  var query = new Dictionary<string, string> { { "page", ""+1 } };
            //  Nav.NavigateTo(QueryHelpers.AddQueryString(Nav.Uri, query));
            ////  Page = 1;
            //  QueryAdapter.f.PageHelper.Page = 1;
            return;
        }

        // Normalize the page values.
        if (QueryAdapter.f.PageHelper.PageCount > 0)
        {
            if (Page < 1)
            {
                Nav.NavigateTo(QueryAdapter.f.PageHelper.BaseUrl + "1");
                return;
            }
            if (Page > QueryAdapter.f.PageHelper.PageCount)
            {
                //   Nav.NavigateTo(QueryAdapter.f.PageHelper.BaseUrl + QueryAdapter.f.PageHelper.PageCount);
                Nav.NavigateTo(QueryAdapter.f.PageHelper.BaseUrl + QueryAdapter.f.PageHelper.PageCount);
                return;
            }
        }
        base.OnAfterRender(firstRender);
    }

    protected async override Task OnParametersSetAsync()
    {
        // Make sure the page really chagned.
        if (Page != _lastPage)
        {
            _lastPage = Page;
            await ReloadAsync();
        }
        await base.OnParametersSetAsync();
    }


    //https://docs.microsoft.com/en-us/aspnet/core/blazor/fundamentals/routing?view=aspnetcore-5.0
    [Parameter]
    public int Page
    {
        get => QueryAdapter.f.PageHelper.Page;
        set
        {
            QueryAdapter.f.PageHelper.Page = value;
        }
    }

    /// <summary>
    /// A wrapper for grid-related activity (like delete).
    /// </summary>
    private GridWrapper Wrapper { get; set; }

    // NOTE by Mark, 2021-01-16
    //int[] marks = new int[] { 99, 98, 92, 97, 95 };
    ApplicationFilterColumns[] SortCols = new ApplicationFilterColumns[]
    {
        ApplicationFilterColumns.FlagType,
        ApplicationFilterColumns.FlagId,
        ApplicationFilterColumns.FlagName,
        ApplicationFilterColumns.Memo,

        };
    string[] SortColsSymbol = new string[] { " ", " ", " ", " " };


    private Task ToggleAsync(ApplicationFilterColumns col)
    {



        if (QueryAdapter.f.SortColumn == col)
        {
            QueryAdapter.f.SortAscending = !QueryAdapter.f.SortAscending;
        }
        else
        {
            QueryAdapter.f.SortColumn = col;
        }


        // NOTE by Mark, 2021-01-16
        for (int i = 0; i < SortColsSymbol.Count(); i++)
        {
            SortColsSymbol[i] = " ";

            if (SortCols[i] == col)
            {
                SortColsSymbol[i] = QueryAdapter.f.SortAscending ? "🔼" : "🔽";
            }
        }


        return ReloadAsync();
    }
    private ICollection<Outbill> Parts { get; set; }
    private List<Outbill> Items { get; set; }


    private async Task ReloadAsync()
    {
        if (QueryAdapter.f.Loading || Page < 1)
        {
            return;
        }

        QueryAdapter.f.Loading = true;

        if (Wrapper != null)
        {
            Wrapper.DeleteRequestId = "";
        }

        Parts = null;

        using var context = DbFactory.CreateDbContext();

        // run the query to load the current page
        //Contacts = await QueryAdapter.FetchAsync(context.Contacts.AsQueryable());

        // NOTE by Mark, 2021-01-12, 建立多欄位的 filter
        Parts = await QueryAdapter.FetchAsyncV4(context.Outbill.AsQueryable());

        //https://stackoverflow.com/questions/580160/how-to-convert-a-collection-to-list
        Items = Parts.ToList();




        // now we're done
        QueryAdapter.f.Loading = false;
    }




    protected override void OnInitialized()
    {

        fieldMappers = new List<FieldMapper>();
        fieldMappers.Add(new FieldMapper { Id = "Cticketcode", Name = "出庫單", Index = -1 });
        fieldMappers.Add(new FieldMapper { Id = "Coutasnid", Name = "出庫通知單ID", Index = -1 });
        fieldMappers.Add(new FieldMapper { Id = "Otype", Name = "出庫類型", Index = -1 });
        fieldMappers.Add(new FieldMapper { Id = "Ccreateownercode", Name = "制單人ID", Index = -1 });
        fieldMappers.Add(new FieldMapper { Id = "Dcreatetime", Name = "制單日期", Index = -1 });
        fieldMappers.Add(new FieldMapper { Id = "Dcreatetime", Name = "出庫日期", Index = -1 });
        fieldMappers.Add(new FieldMapper { Id = "Debittime", Name = "扣帳時間", Index = -1 });
        fieldMappers.Add(new FieldMapper { Id = "Cstatus", Name = "狀態", Index = -1 });

    }
}


