@page "/inbill"
@page "/inbill/{Page:int}"
@using Microsoft.EntityFrameworkCore
@inject IDbContextFactory<TaiweiContext> DbFactory
@inject NavigationManager Nav
@* ============================ *@
@*   NOTE by Mark, 2021-01-14,  *@
@*   Filters and Adapter        *@
@* ============================ *@
@inject IBaseFilters Filters
@inject Q005InbillGridQueryAdapter QueryAdapter

<PageTitle Title="入庫單查詢" />

<GridWrapper @ref="Wrapper"
             FilterChanged="ReloadAsync">
    <div class="container-fluid contacts-grid">

        <Q005InbillFieldFilter />

        @if (Filters.Loading || Parts == null)
        {
            <div class="row">
                <div class="col-12 alert alert-info">
                    Loading...
                </div>
            </div>
        }
        @if (Parts != null && Parts.Count == 0)
        {
            <div class="row">
                <div class="col-12 alert alert-warning">
                    No records found.
                </div>
            </div>
        }

        @if (Parts != null)
        {
            <AutoTableCompV2 Filters="@Filters"
                             Items="Items"
                           ColumsToExcludeCSV="id" 
                           FieldMapper="fieldMappers" 
                            
                             />



        }


        <Q000BasePaging Filters="@Filters" />



    </div>
</GridWrapper>


@code
{
    private string IsDisabled(bool condition) =>
    !Filters.Loading && condition ? "" : "disabled";

    /// <summary>
    /// Keeps track of the last page loaded.
    /// </summary>
    private int _lastPage = -1;


    List<FieldMapper> fieldMappers;

    protected override void OnParametersSet()
    {
        base.OnParametersSet();

        //Cticketcode Cstatus Casnid </ li >

        fieldMappers = new List<FieldMapper>();
        //    < li > 入庫單 狀態 入庫通知單ID
        fieldMappers.Add(new FieldMapper { Id = "Cticketcode", Name = "入庫單", Index = -1 });
        fieldMappers.Add(new FieldMapper { Id = "Cstatus", Name = "狀態", Index = -1 });
        fieldMappers.Add(new FieldMapper { Id = "Casnid", Name = "入庫通知單ID", Index = -1 });




        //openWith.Add("c", "notepad.exe");
        //openWith.Add("bmp", "paint.exe");
        //openWith.Add("dib", "paint.exe");
        //openWith.Add("rtf", "wordpad.exe");
    }



    protected override void OnAfterRender(bool firstRender)
    {
        // Ensure we're on the same, er, right page.
        if (_lastPage < 1)
        {
            Nav.NavigateTo(Filters.PageHelper.BaseUrl + "1");

            return;
        }

        // Normalize the page values.
        if (Filters.PageHelper.PageCount > 0)
        {
            if (Page < 1)
            {
                Nav.NavigateTo(Filters.PageHelper.BaseUrl + "1");
                return;
            }
            if (Page > Filters.PageHelper.PageCount)
            {
                Nav.NavigateTo(Filters.PageHelper.BaseUrl + Filters.PageHelper.PageCount);
                return;
            }
        }
        base.OnAfterRender(firstRender);
    }

    protected async override Task OnParametersSetAsync()
    {
        // Make sure the page really chagned.
        if (Page != _lastPage)
        {
            _lastPage = Page;
            await ReloadAsync();
        }
        await base.OnParametersSetAsync();
    }


    //https://docs.microsoft.com/en-us/aspnet/core/blazor/fundamentals/routing?view=aspnetcore-5.0
    [Parameter]
    public int Page
    {
        get => Filters.PageHelper.Page;
        set
        {
            Filters.PageHelper.Page = value;
        }
    }

    /// <summary>
    /// A wrapper for grid-related activity (like delete).
    /// </summary>
    private GridWrapper Wrapper { get; set; }

    // NOTE by Mark, 2021-01-16
    //int[] marks = new int[] { 99, 98, 92, 97, 95 };
    ApplicationFilterColumns[] SortCols = new ApplicationFilterColumns[]
    {
        ApplicationFilterColumns.FlagType,
        ApplicationFilterColumns.FlagId,
        ApplicationFilterColumns.FlagName,
        ApplicationFilterColumns.Memo,

        };
    string[] SortColsSymbol = new string[] { " ", " ", " ", " " };


    private Task ToggleAsync(ApplicationFilterColumns col)
    {



        if (Filters.SortColumn == col)
        {
            Filters.SortAscending = !Filters.SortAscending;
        }
        else
        {
            Filters.SortColumn = col;
        }


        // NOTE by Mark, 2021-01-16
        for (int i = 0; i < SortColsSymbol.Count(); i++)
        {
            SortColsSymbol[i] = " ";

            if (SortCols[i] == col)
            {
                SortColsSymbol[i] = Filters.SortAscending ? "🔼" : "🔽";
            }
        }


        return ReloadAsync();
    }
    private ICollection<Inbill> Parts { get; set; }
    private List<Inbill> Items { get; set; }


    private async Task ReloadAsync()
    {
        if (Filters.Loading || Page < 1)
        {
            return;
        }

        Filters.Loading = true;

        if (Wrapper != null)
        {
            Wrapper.DeleteRequestId = "";
        }

        Parts = null;

        using var context = DbFactory.CreateDbContext();

        // run the query to load the current page
        //Contacts = await QueryAdapter.FetchAsync(context.Contacts.AsQueryable());

        // NOTE by Mark, 2021-01-12, 建立多欄位的 filter
        Parts = await QueryAdapter.FetchAsyncV4(context.Inbill.AsQueryable());

        //https://stackoverflow.com/questions/580160/how-to-convert-a-collection-to-list
        Items = Parts.ToList();




        // now we're done
        Filters.Loading = false;
    }




    protected override void OnInitialized()
    {
        //base.OnInitialized();


        //  IncrementCount();
    }
}


