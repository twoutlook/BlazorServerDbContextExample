@page "/A007"
@page "/A007/{Page:int}"
@inject NavigationManager NavMgr
@inject IDbContextFactory<TaiweiContext> DbFactory
@inject NavigationManager Nav
@inject A007Adapter QueryAdapter

<CompPageTitleA000 Title="@TITLE" />

<WrapperA @ref="Wrapper" FilterChanged="ReloadAsync">
    <div class="container-fluid contacts-grid">
        <CompSearchA000 Filters="@QueryAdapter.f" />
        @if (QueryAdapter.f.Loading || Items == null)
        {
            <div class="row">
                <div class="col-12 alert alert-info">
                    載入資料中...
                </div>
            </div>
        }

        @if (Items != null)
        {
            <CompTableA000 Filters="@QueryAdapter.f" Items="Items" />
        }

        @if (@QueryAdapter.f.PageHelper.PageCount > 1)
        {
            <CompPagingA000 Filters="@QueryAdapter.f" />
        }
    </div>
</WrapperA>

@code
{
    [Parameter]
    public int Page // 原範例,已更換變量 //頁面上的分頁
    {
        get => QueryAdapter.f.PageHelper.Page;
        set
        {
            QueryAdapter.f.PageHelper.Page = value;
        }
    }

    private WrapperA Wrapper { get; set; } // 整個頁面的剛性骨架

    private ICollection<Object> Objs { get; set; } // 技術梗,適時使用泛型

    private List<VCmdMst> Items { get; set; } // 本頁面要顯示的內容     // === 要調整的地方 ===

    private string IsDisabled(bool condition) => !QueryAdapter.f.Loading && condition ? "" : "disabled";// 原範例,已更換變量

    private int _lastPage = -1;// 原範例,不動

    protected override void OnAfterRender(bool firstRender) // 原範例,已調整導航
    {
        // Ensure we're on the same, er, right page.
        if (_lastPage < 1)
        {
            Nav.NavigateTo(QueryAdapter.f.PageHelper.BaseUrl + "1");
            return;
        }

        // Normalize the page values.
        if (QueryAdapter.f.PageHelper.PageCount > 0)
        {
            if (Page < 1)
            {
                Nav.NavigateTo(QueryAdapter.f.PageHelper.BaseUrl + "1");
                return;
            }
            if (Page > QueryAdapter.f.PageHelper.PageCount)
            {
                Nav.NavigateTo(QueryAdapter.f.PageHelper.BaseUrl + QueryAdapter.f.PageHelper.PageCount);
                return;
            }
        }
        base.OnAfterRender(firstRender);
    }

    protected async override Task OnParametersSetAsync() // 原範例,不動
    {
        // Make sure the page really chagned.
        if (Page != _lastPage)
        {
            _lastPage = Page;
            await ReloadAsync();
        }
        await base.OnParametersSetAsync();
    }

    private string TITLE = "WCS命令查詢";
    private string PRE = "A007";
    private string ENT = "VCmdMst";

    private async Task ReloadAsync()
    {
        if (QueryAdapter.f.Loading || Page < 1)
        {
            return;
        }

        QueryAdapter.f.Loading = true; // --- start

        // 1. 取得10筆泛型模型記錄
        Objs = await QueryAdapter.FetchAsyncV997(DbFactory.CreateDbContext(), ENT);

        // 2. 寫入到本頁的特定模型
        UpdateItems();

        QueryAdapter.f.Loading = false;// --- end
    }

    private void UpdateItems()
    {
        Items = new();
        foreach (VCmdMst x in Objs)   // === 要調整的地方 ===
        {
            Items.Add(x);
        }
    }

    protected override async Task OnInitializedAsync()
    {
        await ReloadAsync();
    }

    protected override void OnInitialized()
    {
        //1. 指定導航網址
        QueryAdapter.f.PageHelper.BaseUrl = "/" + PRE + "/";

        //2. 讀取欄位定義, 如果不存在,以標準模板建立使用
        Type type = typeof(VCmdMst); //注意模型還未放到指定的 namespace   // === 要調整的地方 ===
        PropertyInfo[] properties = type.GetProperties();
        QueryAdapter.ReadJson(type, PRE, ENT);

        //3. 設定默認排序    取第一個欄位, 正向排序
        QueryAdapter.defaultSortStr = QueryAdapter.f.FieldMappers[0].Id + "_1";

        //4. 設置篩選欄位, *** 要處理可篩選欄位不足 4 個 的情況
        QueryAdapter.UpdateFMapper(type);
    }
}



