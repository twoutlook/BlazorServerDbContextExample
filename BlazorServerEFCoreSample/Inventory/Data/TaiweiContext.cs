// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

#nullable disable

namespace Inventory.Data
{
    public partial class TaiweiContext : DbContext
    {
        //public TaiweiContext()
        //{
        //}

        public TaiweiContext(DbContextOptions<TaiweiContext> options)
            : base(options)
        {
        }

        public virtual DbSet<BaseDocureason> BaseDocureason { get; set; }
        public virtual DbSet<BaseOperator> BaseOperator { get; set; }
        public virtual DbSet<BasePart> BasePart { get; set; }
        public virtual DbSet<Inbill> Inbill { get; set; }
        public virtual DbSet<InbillD> InbillD { get; set; }
        public virtual DbSet<Outbill> Outbill { get; set; }
        public virtual DbSet<OutbillD> OutbillD { get; set; }
        public virtual DbSet<StockCurrent> StockCurrent { get; set; }
        public virtual DbSet<StockCurrentAdjust> StockCurrentAdjust { get; set; }
        public virtual DbSet<StockCurrentAdjustD> StockCurrentAdjustD { get; set; }
        public virtual DbSet<StockCurrentSn> StockCurrentSn { get; set; }
        public virtual DbSet<SysConfig> SysConfig { get; set; }
        public virtual DbSet<SysParameter> SysParameter { get; set; }
        public virtual DbSet<V2Outasn> V2Outasn { get; set; }
        public virtual DbSet<V2Outbill> V2Outbill { get; set; }
        public virtual DbSet<V2OutbillD> V2OutbillD { get; set; }
        public virtual DbSet<V2StockCurrentAdjust> V2StockCurrentAdjust { get; set; }
        public virtual DbSet<VCmdMst> VCmdMst { get; set; }
        public virtual DbSet<VInasn> VInasn { get; set; }
        public virtual DbSet<VInoutType> VInoutType { get; set; }
        public virtual DbSet<VOutasnlist> VOutasnlist { get; set; }
        public virtual DbSet<VStockCurrent> VStockCurrent { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "Chinese_PRC_CI_AS");

            modelBuilder.Entity<BaseDocureason>(entity =>
            {
                entity.ToTable("BASE_DOCUREASON");

                entity.Property(e => e.Id)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("id");

                entity.Property(e => e.Actionscope)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("actionscope")
                    .HasComment("作用域 1：入库  2：出库");

                entity.Property(e => e.Ccreateownercode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ccreateownercode")
                    .HasComment("创建人");

                entity.Property(e => e.Dcreatetime)
                    .HasColumnType("datetime")
                    .HasColumnName("dcreatetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Isfromerp)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("isfromerp");

                entity.Property(e => e.Lastupdateowner)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("lastupdateowner")
                    .HasComment("最后更新人");

                entity.Property(e => e.Lastupdatetime)
                    .HasColumnType("datetime")
                    .HasColumnName("lastupdatetime")
                    .HasComment("最后更新时间");

                entity.Property(e => e.Reasoncode)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("reasoncode")
                    .HasComment("理由码编号");

                entity.Property(e => e.Reasoncontent)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("reasoncontent")
                    .HasComment("理由码说明");

                entity.Property(e => e.States)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("states")
                    .HasComment("状态码 Y:可用 N：不可用");
            });

            modelBuilder.Entity<BaseOperator>(entity =>
            {
                entity.ToTable("BASE_OPERATOR");

                entity.HasIndex(e => e.Caccountid, "BASE_OPERATOR_INDEX_");

                entity.HasIndex(e => e.Id, "SYS_C0014378")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasMaxLength(36)
                    .IsUnicode(false)
                    .HasColumnName("id");

                entity.Property(e => e.Caccountid)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("caccountid");

                entity.Property(e => e.Calias)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("calias");

                entity.Property(e => e.Ccreateowner)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ccreateowner");

                entity.Property(e => e.Cdefine1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("cdefine1");

                entity.Property(e => e.Cdefine2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("cdefine2");

                entity.Property(e => e.Cdepartment)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cdepartment");

                entity.Property(e => e.Cduty)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cduty");

                entity.Property(e => e.Cerpcode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("cerpcode");

                entity.Property(e => e.Cmemo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cmemo");

                entity.Property(e => e.Coperatorname)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("coperatorname");

                entity.Property(e => e.Cphone)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cphone");

                entity.Property(e => e.Cshift)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cshift");

                entity.Property(e => e.Cstatus)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cstatus")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Dcreatetime)
                    .HasColumnType("datetime")
                    .HasColumnName("dcreatetime");

                entity.Property(e => e.Ddefine3)
                    .HasColumnType("datetime")
                    .HasColumnName("ddefine3");

                entity.Property(e => e.Ddefine4)
                    .HasColumnType("datetime")
                    .HasColumnName("ddefine4");

                entity.Property(e => e.Idefine5)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("idefine5");

                entity.Property(e => e.Lastupdateowner)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("lastupdateowner");

                entity.Property(e => e.Lastupdatetime)
                    .HasColumnType("datetime")
                    .HasColumnName("lastupdatetime");
            });

            modelBuilder.Entity<BasePart>(entity =>
            {
                entity.ToTable("BASE_PART");

                entity.HasIndex(e => e.Cerpcode, "BASE_PART_INDEX_CERPCODE");

                entity.HasIndex(e => e.Cpartnumber, "BASE_PART_INDEX_CPARTNUMBER");

                entity.HasIndex(e => e.Id, "SYS_C0014393")
                    .IsUnique();

                entity.HasIndex(e => e.Cpartnumber, "uk_BASE_PART_cpartnumber")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasMaxLength(38)
                    .IsUnicode(false)
                    .HasColumnName("id");

                entity.Property(e => e.Bonded)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("bonded")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Boxnum)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("boxnum")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.Calias)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("calias");

                entity.Property(e => e.Cbarrule)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("cbarrule");

                entity.Property(e => e.Cdefaultcargo)
                    .HasMaxLength(36)
                    .IsUnicode(false)
                    .HasColumnName("cdefaultcargo");

                entity.Property(e => e.Cdefaultvendor)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cdefaultvendor");

                entity.Property(e => e.Cdefaultware)
                    .HasMaxLength(36)
                    .IsUnicode(false)
                    .HasColumnName("cdefaultware");

                entity.Property(e => e.Cdefine1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("cdefine1");

                entity.Property(e => e.Cdefine2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("cdefine2");

                entity.Property(e => e.Cerpcode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("cerpcode");

                entity.Property(e => e.Cinrule)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("cinrule");

                entity.Property(e => e.Cmemo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("cmemo");

                entity.Property(e => e.Coutrule)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("coutrule");

                entity.Property(e => e.Cpartname)
                    .IsRequired()
                    .HasMaxLength(300)
                    .IsUnicode(false)
                    .HasColumnName("cpartname");

                entity.Property(e => e.Cpartnumber)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("cpartnumber");

                entity.Property(e => e.Createowner)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("createowner");

                entity.Property(e => e.Createtime)
                    .HasColumnType("datetime")
                    .HasColumnName("createtime");

                entity.Property(e => e.Csafeqty)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("csafeqty");

                entity.Property(e => e.Csafeqtyceiling)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("csafeqtyceiling");

                entity.Property(e => e.Cspecifications)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("cspecifications");

                entity.Property(e => e.Cstatus)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cstatus")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Ctype)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ctype")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Cunits)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cunits");

                entity.Property(e => e.Cusetype)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("cusetype");

                entity.Property(e => e.Cversion)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cversion");

                entity.Property(e => e.Cvolume)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("cvolume");

                entity.Property(e => e.Ddefine3)
                    .HasColumnType("datetime")
                    .HasColumnName("ddefine3");

                entity.Property(e => e.Ddefine4)
                    .HasColumnType("datetime")
                    .HasColumnName("ddefine4");

                entity.Property(e => e.Dexpiredate)
                    .HasColumnType("datetime")
                    .HasColumnName("dexpiredate");

                entity.Property(e => e.ExpDays)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("exp_days");

                entity.Property(e => e.Icw)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("icw");

                entity.Property(e => e.Idefine5)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("idefine5");

                entity.Property(e => e.Iheight)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("iheight");

                entity.Property(e => e.Ilength)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("ilength");

                entity.Property(e => e.Ineedcheck)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("ineedcheck")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Ineedwarn)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("ineedwarn")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Inw)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("inw");

                entity.Property(e => e.Iwidth)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("iwidth");

                entity.Property(e => e.Lastupdateowner)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("lastupdateowner");

                entity.Property(e => e.Lastupdatetime)
                    .HasColumnType("datetime")
                    .HasColumnName("lastupdatetime");

                entity.Property(e => e.Mtype)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("mtype");

                entity.Property(e => e.Productcode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("productcode");

                entity.Property(e => e.Unit)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("UNIT");
            });

            modelBuilder.Entity<Inbill>(entity =>
            {
                entity.ToTable("INBILL");

                entity.HasIndex(e => e.Casnid, "INBILL_INDEX_CASNID");

                entity.HasIndex(e => new { e.Cerpcode, e.Ccreateownercode, e.Itype, e.Cstatus }, "INBILL_INDEX_CERPCODE");

                entity.HasIndex(e => e.Cticketcode, "INBILL_INDEX_CTICKETCODE")
                    .IsUnique();

                entity.HasIndex(e => e.Id, "SYS_C0014569")
                    .IsUnique();

                entity.HasIndex(e => e.Cstatus, "inbill_cstatus");

                entity.HasIndex(e => e.Dcreatetime, "inbill_dcreatetime");

                entity.HasIndex(e => e.Itype, "inbill_itype");

                entity.Property(e => e.Id)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("id");

                entity.Property(e => e.Casnid)
                    .IsRequired()
                    .HasMaxLength(36)
                    .IsUnicode(false)
                    .HasColumnName("casnid");

                entity.Property(e => e.Cauditperson)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("cauditperson");

                entity.Property(e => e.Ccreateownercode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ccreateownercode");

                entity.Property(e => e.Cdefine1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("cdefine1");

                entity.Property(e => e.Cdefine2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("cdefine2");

                entity.Property(e => e.Cerpcode)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("cerpcode");

                entity.Property(e => e.Cmemo)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("cmemo");

                entity.Property(e => e.Creatertype)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("creatertype");

                entity.Property(e => e.Cstatus)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cstatus")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Cticketcode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("cticketcode");

                entity.Property(e => e.Cvender)
                    .HasMaxLength(240)
                    .IsUnicode(false)
                    .HasColumnName("cvender");

                entity.Property(e => e.Cvendercode)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("cvendercode");

                entity.Property(e => e.Daudittime)
                    .HasColumnType("datetime")
                    .HasColumnName("daudittime");

                entity.Property(e => e.Dcreatetime)
                    .HasColumnType("datetime")
                    .HasColumnName("dcreatetime");

                entity.Property(e => e.Ddefine3)
                    .HasColumnType("datetime")
                    .HasColumnName("ddefine3");

                entity.Property(e => e.Ddefine4)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ddefine4");

                entity.Property(e => e.Debitowner)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("debitowner");

                entity.Property(e => e.Debittime)
                    .HasColumnType("datetime")
                    .HasColumnName("debittime");

                entity.Property(e => e.Dindate)
                    .HasColumnType("datetime")
                    .HasColumnName("dindate");

                entity.Property(e => e.Idefine5)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("idefine5");

                entity.Property(e => e.IsTemporary)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Itype)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("itype");

                entity.Property(e => e.Operationtype).HasColumnName("operationtype");

                entity.Property(e => e.Palletcode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("palletcode");

                entity.Property(e => e.Worktype)
                    .HasMaxLength(20)
                    .HasColumnName("worktype");
            });

            modelBuilder.Entity<InbillD>(entity =>
            {
                entity.HasKey(e => e.Ids)
                    .HasName("PK__INBILL_D__DC501A7D353656F1");

                entity.ToTable("INBILL_D");

                entity.HasIndex(e => new { e.Cinvcode, e.Cstatus, e.Cpositioncode }, "INBILL_D_INDEX_CINVCODE");

                entity.HasIndex(e => e.Id, "INBILL_D_INDEX_ID");

                entity.HasIndex(e => e.Ids, "SYS_C0014577")
                    .IsUnique();

                entity.Property(e => e.Ids)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ids");

                entity.Property(e => e.AsnDIds)
                    .HasMaxLength(36)
                    .IsUnicode(false)
                    .HasColumnName("asn_d_ids");

                entity.Property(e => e.AsndLineId).HasColumnName("AsndLineID");

                entity.Property(e => e.AsrsNum)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("asrs_num");

                entity.Property(e => e.AsrsStatus)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("asrs_status")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Callocateid)
                    .HasMaxLength(50)
                    .HasColumnName("callocateid");

                entity.Property(e => e.Cdefine1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("cdefine1");

                entity.Property(e => e.Cdefine2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("cdefine2");

                entity.Property(e => e.Cerpcodeline)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cerpcodeline");

                entity.Property(e => e.Cinpersoncode)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cinpersoncode");

                entity.Property(e => e.Cinvbarcode)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("cinvbarcode");

                entity.Property(e => e.Cinvcode)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("cinvcode");

                entity.Property(e => e.Cinvname)
                    .IsRequired()
                    .HasMaxLength(300)
                    .IsUnicode(false)
                    .HasColumnName("cinvname");

                entity.Property(e => e.Cmemo)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("cmemo");

                entity.Property(e => e.Cnewpositioncode)
                    .HasMaxLength(100)
                    .HasColumnName("cnewpositioncode");

                entity.Property(e => e.Cposition)
                    .HasMaxLength(100)
                    .HasColumnName("cposition");

                entity.Property(e => e.Cpositioncode)
                    .HasMaxLength(100)
                    .HasColumnName("cpositioncode");

                entity.Property(e => e.Cstatus)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cstatus")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Cstoppositioncode)
                    .HasMaxLength(100)
                    .HasColumnName("cstoppositioncode");

                entity.Property(e => e.Ddefine3)
                    .HasColumnType("datetime")
                    .HasColumnName("ddefine3");

                entity.Property(e => e.Ddefine4)
                    .HasColumnType("datetime")
                    .HasColumnName("ddefine4");

                entity.Property(e => e.Dindate)
                    .HasColumnType("datetime")
                    .HasColumnName("dindate");

                entity.Property(e => e.Iasnline)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("iasnline");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("id");

                entity.Property(e => e.Idefine5)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("idefine5");

                entity.Property(e => e.Iline).HasColumnName("iline");

                entity.Property(e => e.Inbilltype)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("inbilltype");

                entity.Property(e => e.Iquantity)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("iquantity");

                entity.Property(e => e.LineId).HasColumnName("LineID");

                entity.Property(e => e.PalletCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("pallet_code");

                entity.Property(e => e.Partno)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("partno");

                entity.Property(e => e.Space)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("space");

                entity.Property(e => e.SpaceStatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("space_status");

                entity.Property(e => e.Wire)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("wire");

                entity.Property(e => e.Wmstskid)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("wmstskid");
            });

            modelBuilder.Entity<Outbill>(entity =>
            {
                entity.ToTable("OUTBILL");

                entity.HasIndex(e => new { e.Cerpcode, e.Cstatus, e.Ccreateownercode, e.Otype }, "OUTBILL_INDEX_CERPCODE");

                entity.HasIndex(e => e.Coutasnid, "OUTBILL_INDEX_COUTASNID");

                entity.HasIndex(e => e.Cticketcode, "OUTBILL_INDEX_CTICKETCODE")
                    .IsUnique();

                entity.HasIndex(e => e.Cstatus, "outbill_cstatus");

                entity.HasIndex(e => e.Dcreatetime, "outbill_dcreatetime");

                entity.HasIndex(e => e.Otype, "outbill_itype");

                entity.Property(e => e.Id)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("id");

                entity.Property(e => e.Cauditperson)
                    .HasMaxLength(50)
                    .HasColumnName("cauditperson");

                entity.Property(e => e.Cclient)
                    .HasMaxLength(240)
                    .IsUnicode(false)
                    .HasColumnName("cclient");

                entity.Property(e => e.Cclientcode)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("cclientcode");

                entity.Property(e => e.Ccreateownercode)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("ccreateownercode");

                entity.Property(e => e.Cdefine1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("cdefine1");

                entity.Property(e => e.Cdefine2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("cdefine2");

                entity.Property(e => e.Cerpcode)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("cerpcode");

                entity.Property(e => e.Cmemo)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("cmemo");

                entity.Property(e => e.Coutasnid)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("coutasnid");

                entity.Property(e => e.Cso)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("cso");

                entity.Property(e => e.Cstatus)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cstatus")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Cticketcode)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("cticketcode");

                entity.Property(e => e.Daudittime)
                    .HasColumnType("datetime")
                    .HasColumnName("daudittime");

                entity.Property(e => e.Dcreatetime)
                    .HasColumnType("datetime")
                    .HasColumnName("dcreatetime");

                entity.Property(e => e.Ddefine3)
                    .HasColumnType("datetime")
                    .HasColumnName("ddefine3");

                entity.Property(e => e.Ddefine4)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ddefine4");

                entity.Property(e => e.Debitowner)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("debitowner");

                entity.Property(e => e.Debittime)
                    .HasColumnType("datetime")
                    .HasColumnName("debittime");

                entity.Property(e => e.Dindate)
                    .HasColumnType("datetime")
                    .HasColumnName("dindate");

                entity.Property(e => e.Idefine5)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("idefine5")
                    .HasComment("是否整板出  0:部分出  1:整板出");

                entity.Property(e => e.IsTemporary)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Operationtype)
                    .HasColumnName("operationtype")
                    .HasComment("操作类型 0：正常流程 1：补单流程");

                entity.Property(e => e.Otype)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("otype");

                entity.Property(e => e.Palletcode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("palletcode");

                entity.Property(e => e.Wo)
                    .HasMaxLength(100)
                    .HasColumnName("wo");

                entity.Property(e => e.Worktype)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("worktype")
                    .HasComment("作业方式 0：平库 1：立库");
            });

            modelBuilder.Entity<OutbillD>(entity =>
            {
                entity.HasKey(e => e.Ids)
                    .HasName("OUTBILL_D_PK");

                entity.ToTable("OUTBILL_D");

                entity.HasIndex(e => e.Id, "IDOUTBILL_D_INDEX_ID");

                entity.HasIndex(e => new { e.Cinvcode, e.Cstatus, e.Cpositioncode, e.Cdefine1 }, "OUTBILL_D_INDEX_CINVCODE");

                entity.Property(e => e.Ids)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ids");

                entity.Property(e => e.AllocateDIds)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("allocate_d_ids");

                entity.Property(e => e.Allotype)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("allotype");

                entity.Property(e => e.AsnDIds)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("asn_d_ids");

                entity.Property(e => e.AsrsNum)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("asrs_num");

                entity.Property(e => e.AsrsStatus)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("asrs_status")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Callocateid)
                    .HasMaxLength(50)
                    .HasColumnName("callocateid");

                entity.Property(e => e.Cdefine1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("cdefine1");

                entity.Property(e => e.Cdefine2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("cdefine2");

                entity.Property(e => e.Cerpcodeline)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cerpcodeline");

                entity.Property(e => e.Cinvbarcode)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("cinvbarcode");

                entity.Property(e => e.Cinvcode)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("cinvcode");

                entity.Property(e => e.Cinvname)
                    .IsRequired()
                    .HasMaxLength(300)
                    .IsUnicode(false)
                    .HasColumnName("cinvname");

                entity.Property(e => e.Cmemo)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("cmemo");

                entity.Property(e => e.Cnewpositioncode)
                    .HasMaxLength(100)
                    .HasColumnName("cnewpositioncode");

                entity.Property(e => e.Coutpersoncode)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("coutpersoncode");

                entity.Property(e => e.Cposition)
                    .HasMaxLength(100)
                    .HasColumnName("cposition");

                entity.Property(e => e.Cpositioncode)
                    .HasMaxLength(100)
                    .HasColumnName("cpositioncode");

                entity.Property(e => e.Cstatus)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cstatus")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Cstoppositioncode)
                    .HasMaxLength(100)
                    .HasColumnName("cstoppositioncode");

                entity.Property(e => e.Ddefine3)
                    .HasColumnType("datetime")
                    .HasColumnName("ddefine3");

                entity.Property(e => e.Ddefine4)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ddefine4");

                entity.Property(e => e.Doutdate)
                    .HasColumnType("datetime")
                    .HasColumnName("doutdate");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("id");

                entity.Property(e => e.Idefine5)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("idefine5");

                entity.Property(e => e.Ioutasnline)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("ioutasnline");

                entity.Property(e => e.Iquantity)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("iquantity");

                entity.Property(e => e.Isgoback)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("isgoback");

                entity.Property(e => e.LineQty)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("line_qty");

                entity.Property(e => e.Lineid).HasColumnName("lineid");

                entity.Property(e => e.Outasndlineid).HasColumnName("outasndlineid");

                entity.Property(e => e.PalletCode)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("pallet_code");

                entity.Property(e => e.PartBond)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("part_bond");

                entity.Property(e => e.Sourcecode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("sourcecode");

                entity.Property(e => e.Wire)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("wire")
                    .HasComment("线别id");

                entity.Property(e => e.Wmstskid)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("wmstskid");

                entity.Property(e => e.Wo)
                    .HasMaxLength(100)
                    .HasColumnName("wo");
            });

            modelBuilder.Entity<StockCurrent>(entity =>
            {
                entity.ToTable("STOCK_CURRENT");

                entity.HasIndex(e => new { e.Cpositioncode, e.Cinvcode }, "INDX_CP_CIN")
                    .IsUnique();

                entity.HasIndex(e => e.Cinvcode, "stock_current_cinvcode");

                entity.HasIndex(e => e.Cpositioncode, "stock_current_cpositioncode");

                entity.HasIndex(e => e.Cwarehousecode, "stock_current_cwarehousecode");

                entity.Property(e => e.Id)
                    .HasMaxLength(36)
                    .IsUnicode(false)
                    .HasColumnName("id");

                entity.Property(e => e.Cbarcode)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cbarcode");

                entity.Property(e => e.Cdatecode)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cdatecode");

                entity.Property(e => e.Cdefine1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("cdefine1");

                entity.Property(e => e.Cdefine2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("cdefine2");

                entity.Property(e => e.Cinvcode)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("cinvcode");

                entity.Property(e => e.Cinvname)
                    .IsRequired()
                    .HasMaxLength(300)
                    .IsUnicode(false)
                    .HasColumnName("cinvname");

                entity.Property(e => e.Cmemo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("cmemo");

                entity.Property(e => e.Cposition)
                    .HasMaxLength(100)
                    .HasColumnName("cposition");

                entity.Property(e => e.Cpositioncode)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnName("cpositioncode");

                entity.Property(e => e.Cstatus)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cstatus")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Cunits)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cunits");

                entity.Property(e => e.Cwarehouse)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cwarehouse");

                entity.Property(e => e.Cwarehousecode)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cwarehousecode");

                entity.Property(e => e.Ddefine3)
                    .HasColumnType("datetime")
                    .HasColumnName("ddefine3");

                entity.Property(e => e.Ddefine4)
                    .HasColumnType("datetime")
                    .HasColumnName("ddefine4");

                entity.Property(e => e.Idefine5)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("idefine5");

                entity.Property(e => e.Ioccupyqty)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ioccupyqty");

                entity.Property(e => e.Iplanin)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("iplanin");

                entity.Property(e => e.Iplanout)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("iplanout");

                entity.Property(e => e.Iqty)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("iqty");

                entity.Property(e => e.Palletcode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("palletcode");
            });

            modelBuilder.Entity<StockCurrentAdjust>(entity =>
            {
                entity.ToTable("STOCK_CURRENT_ADJUST");

                entity.HasIndex(e => e.Cticketcode, "UQ_STOCK_CURRENT_ADJUST")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("id");

                entity.Property(e => e.Createowner)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("createowner");

                entity.Property(e => e.Createtime)
                    .HasColumnType("datetime")
                    .HasColumnName("createtime");

                entity.Property(e => e.Cstatus)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cstatus");

                entity.Property(e => e.Cticketcode)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("cticketcode");

                entity.Property(e => e.Lastupdatetime)
                    .HasColumnType("datetime")
                    .HasColumnName("lastupdatetime");

                entity.Property(e => e.Lastupdateuser)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("lastupdateuser");

                entity.Property(e => e.Reason)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("reason");

                entity.Property(e => e.Reviewtime)
                    .HasColumnType("datetime")
                    .HasColumnName("reviewtime");

                entity.Property(e => e.Reviewuser)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("reviewuser");
            });

            modelBuilder.Entity<StockCurrentAdjustD>(entity =>
            {
                entity.HasKey(e => e.Ids)
                    .HasName("PK__STOCK_CU__DC501A7D01EE4A54");

                entity.ToTable("STOCK_CURRENT_ADJUST_D");

                entity.Property(e => e.Ids)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ids");

                entity.Property(e => e.Cinvcode)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("cinvcode");

                entity.Property(e => e.Cinvname)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("cinvname");

                entity.Property(e => e.Cpositioncode)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("cpositioncode");

                entity.Property(e => e.Cpositionname)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("cpositionname");

                entity.Property(e => e.Createowner)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("createowner");

                entity.Property(e => e.Createtime)
                    .HasColumnType("datetime")
                    .HasColumnName("createtime");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("id");

                entity.Property(e => e.Lastupdatetime)
                    .HasColumnType("datetime")
                    .HasColumnName("lastupdatetime");

                entity.Property(e => e.Lastupdateuser)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("lastupdateuser");

                entity.Property(e => e.Newqty)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("newqty");

                entity.Property(e => e.Oriqty)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("oriqty");

                entity.Property(e => e.Sncode)
                    .IsRequired()
                    .HasMaxLength(75)
                    .IsUnicode(false)
                    .HasColumnName("sncode");

                entity.HasOne(d => d.IdNavigation)
                    .WithMany(p => p.StockCurrentAdjustD)
                    .HasForeignKey(d => d.Id)
                    .HasConstraintName("STOCK_CURRENT_ADJUST_D_FK");
            });

            modelBuilder.Entity<StockCurrentSn>(entity =>
            {
                entity.HasKey(e => e.Ids)
                    .HasName("STOCK_SN_PK_IDS");

                entity.ToTable("STOCK_CURRENT_SN");

                entity.HasIndex(e => e.StockId, "STOCK_SN_ID");

                entity.HasIndex(e => e.Sncode, "STOCK_SN_SNCODE");

                entity.Property(e => e.Ids)
                    .HasMaxLength(36)
                    .IsUnicode(false)
                    .HasColumnName("ids");

                entity.Property(e => e.Createtime)
                    .HasColumnType("datetime")
                    .HasColumnName("createtime");

                entity.Property(e => e.Createuser)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("createuser");

                entity.Property(e => e.Cstatus)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cstatus")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Datecode)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("datecode");

                entity.Property(e => e.Default2)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("default2");

                entity.Property(e => e.Erpcode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("ERPCODE");

                entity.Property(e => e.Furnaceno)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("furnaceno");

                entity.Property(e => e.Lastupdatetime)
                    .HasColumnType("datetime")
                    .HasColumnName("lastupdatetime");

                entity.Property(e => e.Lastupdateuser)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("lastupdateuser");

                entity.Property(e => e.Memo)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("memo");

                entity.Property(e => e.Palletcode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("palletcode");

                entity.Property(e => e.Qty)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("qty");

                entity.Property(e => e.Rulecode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("RULECODE");

                entity.Property(e => e.SnCode20)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("SN_CODE20");

                entity.Property(e => e.Sncode)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("sncode");

                entity.Property(e => e.Sntype)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("sntype")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.StockId)
                    .HasMaxLength(36)
                    .IsUnicode(false)
                    .HasColumnName("stock_id");

                entity.Property(e => e.Stocktype)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("stocktype");

                entity.Property(e => e.Vendorcode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("VENDORCODE");
            });

            modelBuilder.Entity<SysConfig>(entity =>
            {
                entity.ToTable("SYS_CONFIG");

                entity.HasIndex(e => e.Id, "SYS_C0017098")
                    .IsUnique();

                entity.HasIndex(e => e.Code, "uk_SYS_CONFIG_code")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasMaxLength(36)
                    .IsUnicode(false)
                    .HasColumnName("id")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("code");

                entity.Property(e => e.ConfigDesc)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("config_desc");

                entity.Property(e => e.ConfigValue)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("config_value");

                entity.Property(e => e.Createowner)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("createowner")
                    .HasDefaultValueSql("('admin')");

                entity.Property(e => e.Createtime)
                    .HasColumnType("datetime")
                    .HasColumnName("createtime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Lastupdateowner)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("lastupdateowner")
                    .HasDefaultValueSql("('admin')");

                entity.Property(e => e.Lastupdatetime)
                    .HasColumnType("datetime")
                    .HasColumnName("lastupdatetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Memo)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("memo");

                entity.Property(e => e.Status)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("status")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Type)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("type");

                entity.Property(e => e.TypeMemo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("type_memo");
            });

            modelBuilder.Entity<SysParameter>(entity =>
            {
                entity.ToTable("SYS_PARAMETER");

                entity.HasIndex(e => e.Id, "IDX_ID")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasMaxLength(50)
                    .HasColumnName("ID");

                entity.Property(e => e.FlagId)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("flag_id");

                entity.Property(e => e.FlagName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("flag_name");

                entity.Property(e => e.FlagType)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("flag_type");

                entity.Property(e => e.Memo)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("memo");

                entity.Property(e => e.Sortid)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("sortid");
            });

            modelBuilder.Entity<V2Outasn>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V2_OUTASN");

                entity.Property(e => e.Ccreateownercode)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ccreateownercode");

                entity.Property(e => e.Ccreateownername)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ccreateownername");

                entity.Property(e => e.Cstatus)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cstatus");

                entity.Property(e => e.Cstatusname)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("cstatusname");

                entity.Property(e => e.Cticketcode)
                    .HasMaxLength(20)
                    .HasColumnName("cticketcode");

                entity.Property(e => e.Dcreatetime)
                    .HasColumnType("datetime")
                    .HasColumnName("dcreatetime");

                entity.Property(e => e.Itype)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("itype");

                entity.Property(e => e.Reasoncode)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("reasoncode");

                entity.Property(e => e.Typename)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("TYPENAME");
            });

            modelBuilder.Entity<V2Outbill>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V2_OUTBILL");

                entity.Property(e => e.Ccreateownername)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ccreateownername");

                entity.Property(e => e.Coutasn)
                    .HasMaxLength(20)
                    .HasColumnName("coutasn");

                entity.Property(e => e.Cstatus)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cstatus");

                entity.Property(e => e.Cstatusname)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("cstatusname");

                entity.Property(e => e.Cticketcode)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("cticketcode");

                entity.Property(e => e.Debittime)
                    .HasColumnType("datetime")
                    .HasColumnName("debittime");

                entity.Property(e => e.Dindate)
                    .HasColumnType("datetime")
                    .HasColumnName("dindate");

                entity.Property(e => e.Outtype)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("outtype");
            });

            modelBuilder.Entity<V2OutbillD>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V2_OUTBILL_D");

                entity.Property(e => e.AllocateDIds)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("allocate_d_ids");

                entity.Property(e => e.Allotype)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("allotype");

                entity.Property(e => e.AsnDIds)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("asn_d_ids");

                entity.Property(e => e.AsrsNum)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("asrs_num");

                entity.Property(e => e.AsrsStatus)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("asrs_status");

                entity.Property(e => e.Callocateid)
                    .HasMaxLength(50)
                    .HasColumnName("callocateid");

                entity.Property(e => e.Cdefine1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("cdefine1");

                entity.Property(e => e.Cdefine2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("cdefine2");

                entity.Property(e => e.Cerpcodeline)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cerpcodeline");

                entity.Property(e => e.Cinvbarcode)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("cinvbarcode");

                entity.Property(e => e.Cinvcode)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("cinvcode");

                entity.Property(e => e.Cinvname)
                    .IsRequired()
                    .HasMaxLength(300)
                    .IsUnicode(false)
                    .HasColumnName("cinvname");

                entity.Property(e => e.Cmemo)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("cmemo");

                entity.Property(e => e.Cnewpositioncode)
                    .HasMaxLength(100)
                    .HasColumnName("cnewpositioncode");

                entity.Property(e => e.Coutpersoncode)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("coutpersoncode");

                entity.Property(e => e.Cposition)
                    .HasMaxLength(100)
                    .HasColumnName("cposition");

                entity.Property(e => e.Cpositioncode)
                    .HasMaxLength(100)
                    .HasColumnName("cpositioncode");

                entity.Property(e => e.Cstatus)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cstatus");

                entity.Property(e => e.Cstoppositioncode)
                    .HasMaxLength(100)
                    .HasColumnName("cstoppositioncode");

                entity.Property(e => e.Cticketcode)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("cticketcode");

                entity.Property(e => e.Ddefine3)
                    .HasColumnType("datetime")
                    .HasColumnName("ddefine3");

                entity.Property(e => e.Ddefine4)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ddefine4");

                entity.Property(e => e.Doutdate)
                    .HasColumnType("datetime")
                    .HasColumnName("doutdate");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("id");

                entity.Property(e => e.Idefine5)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("idefine5");

                entity.Property(e => e.Ids)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ids");

                entity.Property(e => e.Ioutasnline)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("ioutasnline");

                entity.Property(e => e.Iquantity)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("iquantity");

                entity.Property(e => e.Isgoback)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("isgoback");

                entity.Property(e => e.LineQty)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("line_qty");

                entity.Property(e => e.Lineid).HasColumnName("lineid");

                entity.Property(e => e.Outasndlineid).HasColumnName("outasndlineid");

                entity.Property(e => e.PalletCode)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("pallet_code");

                entity.Property(e => e.PartBond)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("part_bond");

                entity.Property(e => e.Sourcecode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("sourcecode");

                entity.Property(e => e.Wire)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("wire");

                entity.Property(e => e.Wmstskid)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("wmstskid");

                entity.Property(e => e.Wo)
                    .HasMaxLength(100)
                    .HasColumnName("wo");
            });

            modelBuilder.Entity<V2StockCurrentAdjust>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V2_STOCK_CURRENT_ADJUST");

                entity.Property(e => e.Createowner)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("createowner");

                entity.Property(e => e.Createownername)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("createownername");

                entity.Property(e => e.Createtime)
                    .HasColumnType("datetime")
                    .HasColumnName("createtime");

                entity.Property(e => e.Cstatus)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cstatus");

                entity.Property(e => e.Cstatusname)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("cstatusname");

                entity.Property(e => e.Cticketcode)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("cticketcode");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("id");

                entity.Property(e => e.Lastupdatetime)
                    .HasColumnType("datetime")
                    .HasColumnName("lastupdatetime");

                entity.Property(e => e.Lastupdateuser)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("lastupdateuser");

                entity.Property(e => e.Reason)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("reason");

                entity.Property(e => e.Reviewtime)
                    .HasColumnType("datetime")
                    .HasColumnName("reviewtime");

                entity.Property(e => e.Reviewuser)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("reviewuser");
            });

            modelBuilder.Entity<VCmdMst>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_CMD_MST");

                entity.Property(e => e.ActTime)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CmdMode)
                    .IsRequired()
                    .HasMaxLength(1);

                entity.Property(e => e.CmdSno)
                    .IsRequired()
                    .HasMaxLength(5);

                entity.Property(e => e.CmdSts)
                    .IsRequired()
                    .HasMaxLength(1);

                entity.Property(e => e.Cticketcode)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("CTICKETCODE");

                entity.Property(e => e.EndTime)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.LineId).HasMaxLength(20);

                entity.Property(e => e.Loc)
                    .HasMaxLength(11)
                    .HasColumnName("LOC");

                entity.Property(e => e.Msg)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("MSG");

                entity.Property(e => e.NewLoc)
                    .HasMaxLength(7)
                    .IsUnicode(false);

                entity.Property(e => e.Packageno)
                    .HasMaxLength(100)
                    .HasColumnName("PACKAGENO");

                entity.Property(e => e.Prt)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasColumnName("PRT");

                entity.Property(e => e.Remark)
                    .HasMaxLength(800)
                    .HasColumnName("REMARK");

                entity.Property(e => e.Result)
                    .HasMaxLength(2000)
                    .IsUnicode(false);

                entity.Property(e => e.StnNo)
                    .IsRequired()
                    .HasMaxLength(4);

                entity.Property(e => e.TaskNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TaskNO");

                entity.Property(e => e.TrnDate)
                    .HasMaxLength(30)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VInasn>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_INASN");

                entity.Property(e => e.Cauditpersoncode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("cauditpersoncode");

                entity.Property(e => e.Ccreateownercode)
                    .HasMaxLength(100)
                    .HasColumnName("ccreateownercode");

                entity.Property(e => e.Cerpcode)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("cerpcode");

                entity.Property(e => e.Cpo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("cpo");

                entity.Property(e => e.Cstatus)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cstatus");

                entity.Property(e => e.Cticketcode)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cticketcode");

                entity.Property(e => e.Dauditdate)
                    .HasColumnType("datetime")
                    .HasColumnName("dauditdate");

                entity.Property(e => e.Dcreatetime)
                    .HasColumnType("datetime")
                    .HasColumnName("dcreatetime");

                entity.Property(e => e.Ddefine3)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ddefine3");

                entity.Property(e => e.Ddefine4)
                    .HasMaxLength(50)
                    .HasColumnName("ddefine4");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("id");

                entity.Property(e => e.InasnIaId)
                    .HasMaxLength(36)
                    .IsUnicode(false)
                    .HasColumnName("inasn_ia_id");

                entity.Property(e => e.Isspecialwipreturn)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasColumnName("isspecialwipreturn");

                entity.Property(e => e.Itype)
                    .HasMaxLength(36)
                    .IsUnicode(false)
                    .HasColumnName("itype");

                entity.Property(e => e.Oby).HasColumnName("oby");

                entity.Property(e => e.Reasoncode)
                    .HasMaxLength(30)
                    .HasColumnName("reasoncode");

                entity.Property(e => e.Reasoncontent)
                    .HasMaxLength(100)
                    .HasColumnName("reasoncontent");

                entity.Property(e => e.Statusname)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("statusname");

                entity.Property(e => e.Typename)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("typename");

                entity.Property(e => e.Worktype)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("WORKTYPE");

                entity.Property(e => e.WorktypeName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("worktypeName");
            });

            modelBuilder.Entity<VInoutType>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_INOutType");

                entity.Property(e => e.Attribute1)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ATTRIBUTE1");

                entity.Property(e => e.Cerpcode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CERPCODE");

                entity.Property(e => e.Createdate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATEDATE");

                entity.Property(e => e.Createuser)
                    .HasMaxLength(100)
                    .HasColumnName("CREATEUSER");

                entity.Property(e => e.DisableDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DISABLE_DATE");

                entity.Property(e => e.Enable)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ENABLE");

                entity.Property(e => e.Enabledate)
                    .HasColumnType("datetime")
                    .HasColumnName("ENABLEDATE");

                entity.Property(e => e.Enableuser)
                    .HasMaxLength(100)
                    .HasColumnName("ENABLEUSER");

                entity.Property(e => e.IsMatchSo)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.IsMatchVendor)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.IsZf)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("IS_ZF");

                entity.Property(e => e.T)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.TransactionActionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TRANSACTION_ACTION_ID");

                entity.Property(e => e.TransactionSourceTypeId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TRANSACTION_SOURCE_TYPE_ID");

                entity.Property(e => e.TypeClass)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_CLASS");

                entity.Property(e => e.Typeid)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TYPEID");

                entity.Property(e => e.Typename)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("TYPENAME");
            });

            modelBuilder.Entity<VOutasnlist>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_OUTASNList");

                entity.Property(e => e.Cauditpersoncode)
                    .HasMaxLength(50)
                    .HasColumnName("cauditpersoncode");

                entity.Property(e => e.Ccreateownercode)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ccreateownercode");

                entity.Property(e => e.Cdefine2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("cdefine2");

                entity.Property(e => e.Cerpcode)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("cerpcode");

                entity.Property(e => e.Cso)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("cso");

                entity.Property(e => e.Cstatus)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cstatus");

                entity.Property(e => e.Cstatusname)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("cstatusname");

                entity.Property(e => e.Cticketcode)
                    .HasMaxLength(20)
                    .HasColumnName("cticketcode");

                entity.Property(e => e.Dauditdate)
                    .HasColumnType("datetime")
                    .HasColumnName("dauditdate");

                entity.Property(e => e.Dcreatetime)
                    .HasColumnType("datetime")
                    .HasColumnName("dcreatetime");

                entity.Property(e => e.FlagName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("flag_name");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("id");

                entity.Property(e => e.IsCj).HasColumnName("is_cj");

                entity.Property(e => e.IsMerge)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("is_merge");

                entity.Property(e => e.IsMergename)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("is_mergename");

                entity.Property(e => e.Itype)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("itype");

                entity.Property(e => e.Shifts)
                    .HasMaxLength(20)
                    .HasColumnName("SHIFTS");

                entity.Property(e => e.Smttype)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("smttype");

                entity.Property(e => e.Smttypeint)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("smttypeint");

                entity.Property(e => e.SpecialOut)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("special_out");

                entity.Property(e => e.StartDates)
                    .HasColumnType("datetime")
                    .HasColumnName("START_DATES");

                entity.Property(e => e.Typename)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("typename");

                entity.Property(e => e.Worktype)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("worktype");
            });

            modelBuilder.Entity<VStockCurrent>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_STOCK_CURRENT");

                entity.Property(e => e.Cdatecode)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cdatecode");

                entity.Property(e => e.Cinvcode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("cinvcode");

                entity.Property(e => e.Cinvname)
                    .HasMaxLength(300)
                    .IsUnicode(false)
                    .HasColumnName("cinvname");

                entity.Property(e => e.Cposition)
                    .HasMaxLength(100)
                    .HasColumnName("cposition");

                entity.Property(e => e.Cpositioncode)
                    .HasMaxLength(100)
                    .HasColumnName("cpositioncode");

                entity.Property(e => e.Cwarehouse)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cwarehouse");

                entity.Property(e => e.Cwarehousecode)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cwarehousecode");

                entity.Property(e => e.Id)
                    .HasMaxLength(36)
                    .IsUnicode(false)
                    .HasColumnName("id");

                entity.Property(e => e.Ioccupyqty)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ioccupyqty");

                entity.Property(e => e.Iqty)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("iqty");

                entity.Property(e => e.LockNum).HasColumnType("decimal(18, 6)");
            });

            modelBuilder.HasSequence("ASRS_cmdno_SEQ")
                .HasMin(1)
                .HasMax(99999999999999999)
                .IsCyclic();

            modelBuilder.HasSequence("ASRS_CmdSno_RGV_A")
                .HasMin(1)
                .HasMax(24999)
                .IsCyclic();

            modelBuilder.HasSequence("ASRS_CmdSno_RGV_B")
                .HasMin(1)
                .HasMax(24999)
                .IsCyclic();

            modelBuilder.HasSequence("ASRS_CmdSno_RGV_C")
                .HasMin(1)
                .HasMax(24999)
                .IsCyclic();

            modelBuilder.HasSequence("ASRS_SEQ")
                .StartsAt(1301)
                .HasMin(1)
                .HasMax(99999999999999999)
                .IsCyclic();

            modelBuilder.HasSequence("ASRS_SNO_SEQ")
                .StartsAt(1003)
                .HasMin(1003)
                .HasMax(24999)
                .IsCyclic();

            modelBuilder.HasSequence("ASRS_WmsTskId_RGV")
                .HasMin(1)
                .HasMax(99999999999999999)
                .IsCyclic();

            modelBuilder.HasSequence("SEQ_DATABASEERROR");

            modelBuilder.HasSequence("SEQ_SERIAL_NO").IsCyclic();

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}